@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
    ViewData["Title"] = "Чит-меню";
    
}
@using Cofefe.ViewModels
@using Cofefe.Models
@using Cofefe.Controllers
@model UserProductViewmodel

<link rel="stylesheet" href="~/lib/bootstrap/dist/css/AdminViewStyle.css" />

<div class="main">
    <div class="filter">
        <form style="grid-row:1;" class="filtercatalog" method="post" action="/Home/GetUsers" id="userForm">
            <button type="submit" class="btnproductcatalog">
                <p id="catalog1">Пользователи</p>
            </button>
        </form>
        <form style="grid-row:2;" class="filtercatalog" method="post" action="/Home/GetProducts" id="catalogForm">
            <button type="submit" class="btnproductcatalog" style="width:160px;">
                <p id="catalog2">Каталог товаров</p>
            </button>
        </form>
        <form style="grid-row:3;" class="filtercatalog" method="post" action="/Home/GetOrders" id="catalogForm">
            <button type="submit" class="btnproductcatalog" style="width:160px;">
                <p id="catalog2">Не отправленные заказы</p>
            </button>
        </form>
        <form style="grid-row:4;" class="filtercatalog" method="post" action="/Home/GetSentOrders" id="catalogForm">
            <button type="submit" class="btnproductcatalog" style="width:160px;">
                <p id="catalog2">Отправленные заказы</p>
            </button>
        </form>
    </div>
    @if (Model != null && Model.Products != null && Model.Products.Any())
    {
    <div class="catalogAdmin">
            @switch (ViewBag.CatalogType)
            {
                case "Products":
                    <form class="emptycard" style="width: 450px;height: 300px; margin:30px;" method="get" action="/Home/AddProduct" id="catalogForm">
                        <button class="addbtn" style="width: 450px;height: 300px;"></button>
                    </form>
                    @foreach (var product in Model.Products)
                    {
                        <div class="card">
                            <img class="image" alt="@product.Image" src="data:image/png;base64,@product.Image">
                            <div class="divtxt">
                                <div class="div-name">
                                    <h3 class="namecard">@product.Name</h3>
                                </div>
                                <div class="divnameprop">
                                    <h3 class="textcard">Кислотность</h3>
                                    <h3 class="textcard">Плотность</h3>
                                </div>
                                <div class="divdbvalue">
                                    @foreach (var inf in Model.CategoryProducts
                                   .Join(Model.Categories, cp => cp.CategoryID, c => c.Id, (cp, c) => new { cp, c })
                                   .Join(Model.Products, x => x.cp.ProductID, p => p.Id, (x, p) => new { x.cp, x.c, p }).Where(x => x.p.Id == product.Id))
                                    {
                                        @if (inf.c.Id == 1)
                                        {
                                            <h3 class="textcard" alt="кислотность">@inf.cp.Value</h3>
                                        }
                                        else if (inf.c.Id == 2)
                                        {
                                            <h3 class="textcard" alt="Плотность">@inf.cp.Value</h3>
                                        }
                                    }
                                </div>
                                <div class="divproductinf">
                                    <h3 style="grid-row:1; margin-left:5px;">@product.Description</h3>
                                    <h3 style="font-weight:600;grid-row:2; margin-left:5px; margin-top:10px;">Вес: @product.Weight г.</h3>
                                    <div class="divproductcost">
                                        <h3 style="grid-column:1; margin-left:5px; font-size:25px;margin-top:10px;">@product.Cost ₽</h3>
                                    </div>
                                </div>
                            </div>
                            @* <form class="upddiv" method="get" action="/Home/UpdateProduct">
                                <input type="hidden" name="id" value="@product.Id" />
                                <button type="submit" class="btndel">Редактировать</button>
                            </form> *@
                            @if (product.IsHidden == true)
                            {
                                <form class="deldiv" style="grid-column:2;grid-row:2;" method="post" action="/Home/VisibleProduct">
                                    <input type="hidden" name="productId" value="@product.Id" />
                                    <button type="submit" class="btndel">Показать</button>
                                </form>
                            }
                            else
                            {
                                <form class="deldiv" style="grid-column:2;grid-row:2;" method="post" action="/Home/DeleteProduct">
                                    <input type="hidden" name="productId" value="@product.Id" />
                                    <button type="submit" class="btndel">Скрыть</button>
                                </form>
                            }
                        </div>
                    }
                    break;

                case "Orders":
                    var groupedOrders = Model.AllOrders.GroupBy(o => o.OrderId);
                    @foreach (var AllOrder in groupedOrders)
                    {
                        var user = Model.Users.FirstOrDefault();
                        int summ = 0;
                        <div class="ordercard">
                            <div class="orderinfodiv">
                                <h3 class="orderinfo">Заказ номер @AllOrder.Key</h3>
                            </div>
                            <div class="propdiv">
                                <div class="orderitems-container">
                                    @foreach (var orders in AllOrder)
                                    {
                                        <div class="orderitem">
                                            <h3 class="itemname">@orders.Product.Name X @orders.ProductCount</h3>
                                            <h3 class="itemcost">Цена: @(orders.ProductCostAtTimeOrder * orders.ProductCount) ₽</h3>
                                            @{
                                                summ += orders.ProductCostAtTimeOrder * orders.ProductCount;
                                                user = Model.Users.FirstOrDefault(u => u.Id == orders.UserID);
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                            
                            @if (user != null)
                            {
                                <h3 style="grid-row:3" class="order-total">ФИО: @user.FIO</h3>
                                <h3 style="grid-row:4" class="order-total">Адрес: @user.Address</h3>
                            }
                            
                            <h3 class="order-total">Итоговая стоимость: @summ ₽</h3>
                            <form asp-action="ChangeOrderStatus" class="deldiv2" asp-controller="Home" method="post">
                                <input type="hidden" name="orderId" value="@AllOrder.Key" />
                                <button type="submit" name="status" value="send" class="btnchangestatus">
                                    Отправить
                                </button>
                                <button type="submit" style="margin-left:10px" name="status" value="cancel" class="btnchangestatus">
                                    Отменить
                                </button>
                            </form>
                        </div>
                    }
                    break;
                case "SentOrders":
                    groupedOrders = Model.SentOrders.GroupBy(o => o.OrderId);
                    @foreach (var AllOrder in groupedOrders)
                    {
                        var user = Model.Users.FirstOrDefault();
                        int summ = 0;
                        <div class="ordercard">
                            <div class="orderinfodiv">
                                <h3 class="orderinfo">Заказ номер @AllOrder.Key</h3>
                            </div>
                            <div class="propdiv">
                                <div class="orderitems-container">
                                    @foreach (var orders in AllOrder)
                                    {
                                        <div class="orderitem">
                                            <h3 class="itemname">@orders.Product.Name X @orders.ProductCount</h3>
                                            <h3 class="itemcost">Цена: @(orders.ProductCostAtTimeOrder * orders.ProductCount) ₽</h3>
                                            @{
                                                summ += orders.ProductCostAtTimeOrder * orders.ProductCount;
                                                user = Model.Users.FirstOrDefault(u => u.Id == orders.UserID);
                                            }
                                        </div>
                                    }
                                </div>
                            </div>

                            @if (user != null)
                            {
                                <h3 style="grid-row:3" class="order-total">ФИО: @user.FIO</h3>
                                <h3 style="grid-row:4" class="order-total">Адрес: @user.Address</h3>
                            }

                            <h3 class="order-total">Итоговая стоимость: @summ ₽</h3>
                        </div>
                    }
                    break;

                case "Users":
                    @* <form class="emptycard" method="get" action="/Home/CreateTestUser" id="catalogForm">
                        <button class="addbtn"></button>
                    </form> *@
                    @foreach (var user in Model.Users.Where(x => x.role == 2))
                    {
                        <div class="usercard">
                            <div class="namediv">
                                <h3 class="namecard">@user.FIO</h3>
                            </div>
                            <div class="propdiv">
                                <h3 class="namecard" style="grid-row:3; grid-column:1">Номер телефона:</h3>
                                <h3 class="namecard" style="grid-row:4; grid-column:1">Адресс:</h3>
                                <h3 class="namecard" style="grid-row:3; grid-column:2">
                                    @($"8({user.PhoneNumber.Substring(1, 3)})-{user.PhoneNumber.Substring(4, 3)}-{user.PhoneNumber.Substring(7, 2)}-{user.PhoneNumber.Substring(9, 2)}")
                                </h3>
                                <h3 class="namecard" style="grid-row:4; grid-column:2">@user.Address</h3>
                            </div>
                            <form asp-action="DeleteUser" class="deldiv" asp-controller="Home" method="post">
                                <input type="hidden" name="userId" value="@user.Id" />
                                <button type="submit" class="btndel">Удалить</button>
                            </form>
                            @if (TempData["ErrorMessage"] != null)
                            {
                                <script>
                                    var errorMessage = '@Html.Raw(TempData["ErrorMessage"])';
                                    alert(errorMessage);
                                </script>
                            }
                        </div>
                    }
                    break;

                default:
                    <h3>Неизвестный тип каталога</h3>
                    break;
            }
        </div>
    }
    else
    {
        <div style="background-color:#121119;">
            <p style="color:#F7F7F7; margin-left:20px;">Выберите один из каталогов</p>
        </div>
        
    }
</div>
